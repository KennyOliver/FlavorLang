{
  "name": "FlavorLang",
  "fileTypes": ["flv", "flavor", "flavorlang"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#keywords" },
    { "include": "#functions" },
    { "include": "#numbers" },
    { "include": "#operators" },
    { "include": "#variables" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.flavorlang",
          "match": "#.*$"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.flavorlang",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.flavorlang",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.flavorlang",
          "match": "\\b(let|if|elif|else|for|in|while|create|burn|deliver|check|is|rescue|try|break|continue)\\b"
        },
        {
          "name": "keyword.other.flavorlang",
          "match": "\\b(True|False|None)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.flavorlang",
          "match": "\\b(serve|burn|deliver|sample|plate|garnish|taste|create|check|rescue|string|int|float|get_time)\\b(?=\\()"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.integer.flavorlang",
          "match": "\\b\\d+\\b"
        },
        {
          "name": "constant.numeric.float.flavorlang",
          "match": "\\b\\d+\\.\\d+\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.flavorlang",
          "match": "==|!=|<=|>=|<|>|\\+|\\-|\\*\\*|\\/\\/|\\/|%|=|\\.\\.|\\.\\."
        },
        {
          "name": "punctuation.separator.range.flavorlang",
          "match": "\\.{2,3}"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.flavorlang",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  },
  "scopeName": "source.flavorlang"
}
