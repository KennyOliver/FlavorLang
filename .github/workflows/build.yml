name: Build & Release FlavorLang

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    name: Build FlavorLang & VS Code Extension
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build VS Code extension
        working-directory: vscode-extension
        run: |
          npm ci
          npm audit fix --force || true
          npx @vscode/vsce package
          mv *.vsix flavorlang-extension-${{ matrix.os }}.vsix
          # Move the VSIX to the root directory
          mv flavorlang-extension-${{ matrix.os }}.vsix ../

      - name: Build FlavorLang interpreter
        working-directory: src
        run: make

      - name: Rename FlavorLang interpreter
        run: mv src/flavor src/flavorlang-${{ matrix.os }}

      # Make interpreter executable
      - name: Make interpreter executable
        run: chmod +x flavorlang-${{ matrix.os }}

      # Copy the appropriate install.sh script
      - name: Copy install.sh
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            cp scripts/install_macos.sh install.sh
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            cp scripts/install_ubuntu.sh install.sh
          fi

      # Package interpreter, VSIX, and install.sh into a ZIP
      - name: Package release assets
        run: |
          zip -r flavorlang-${{ matrix.os }}.zip flavorlang-${{ matrix.os }} flavorlang-extension-${{ matrix.os }}.vsix install.sh

      # Upload the ZIP as an artifact
      - name: Upload release package
        uses: actions/upload-artifact@v4
        with:
          name: flavorlang-${{ matrix.os }}
          path: flavorlang-${{ matrix.os }}.zip

  release:
    name: Attach Artifacts to Release
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      # Debug step to verify file structure
      - name: Debug file structure
        run: |
          echo "Contents of artifacts directory:"
          ls -R ./artifacts
          find ./artifacts -type f

      - name: Upload release artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/**/flavorlang-ubuntu-latest.zip
            ./artifacts/**/flavorlang-macos-latest.zip
